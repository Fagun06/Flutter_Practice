import 'package:flutter/material.dart';
import 'package:intl/intl.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        textTheme: TextTheme(
          headlineSmall: TextStyle(fontSize: 21, fontWeight: FontWeight.bold),
          titleSmall:  TextStyle(fontSize: 11, fontWeight: FontWeight.w500, fontStyle: FontStyle.italic)
        )
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter() {
    setState(() {
     
      _counter++;
    });
  }

  @override
  Widget build(BuildContext context) {
    var time = DateTime.now();
    return Scaffold(
      appBar: AppBar(
        title: Center(child: Text("Id Card"))
        ),
      body: Center(
        child: Column(
          children: [
            Text(
              'Select Date',
              style: TextStyle(fontSize: 25),
            ),
            ElevatedButton(onPressed: () async {
              DateTime? datePicked = await showDatePicker(
                  context: context, 
                  initialDate: DateTime.now().isAfter(DateTime(2024)) ? DateTime(2024) : DateTime.now(),
                  firstDate: DateTime(2020),
                 lastDate: DateTime(2025)
                );

                if(datePicked!=null) {
                  print('Date selected : ${datePicked.day}-${datePicked.month}-${datePicked.year}');
                }
            }, child: Text('Show'))
,
             ElevatedButton(onPressed: () async {
              TimeOfDay? pickedTime = await showTimePicker(
                  context: context, 
                  initialTime: TimeOfDay.now(),
                  initialEntryMode: TimePickerEntryMode.input
                );

                if(pickedTime!=null) {
                  print('Time selected : ${pickedTime.hour}-${pickedTime.minute}');
                }
            }, child: Text('Time'))
          ],
        ),
      ),
      
    );
  }
}
